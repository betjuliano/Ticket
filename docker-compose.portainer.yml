version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: ticket-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ticket_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ticket-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicação Next.js
  app:
    image: ticket-system:latest
    container_name: ticket-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/ticket_system
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    ports:
      - "${APP_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ticket-network
    labels:
      # Labels para Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.ticket.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.ticket.entrypoints=websecure"
      - "traefik.http.routers.ticket.tls.certresolver=letsencrypt"
      - "traefik.http.services.ticket.loadbalancer.server.port=3000"
      # Middleware de segurança
      - "traefik.http.routers.ticket.middlewares=security-headers@file"

volumes:
  postgres_data:
    driver: local

networks:
  ticket-network:
    external: true
    name: traefik

